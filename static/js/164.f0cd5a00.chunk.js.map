{"version":3,"file":"static/js/164.f0cd5a00.chunk.js","mappings":"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","sources":["pages/recovery.jsx","widgets/AuthorizationWidgets/RegisterWidgets.jsx","widgets/AuthorizationWidgets/RecoveryWidgets.jsx"],"sourcesContent":["import { Container } from \"../UI/Container\";\nimport { Breadcrumbs } from \"../components/Breadcrumbs\";\nimport { LayoutDefault } from \"../components/LayoutDefault\";\nimport { RecoveryWidgets } from \"../widgets/AuthorizationWidgets\";\n\nconst RecoveryPage = () => {\n    const breadcrumbsItems = [\n        {\n            text: 'Главная',\n            link: '/'\n        },\n        {\n            text: 'Восстановление',\n            active: true\n        }\n    ];\n\n    return (\n        <LayoutDefault>\n            <Container>\n                <Breadcrumbs items={breadcrumbsItems}></Breadcrumbs>\n                <RecoveryWidgets></RecoveryWidgets>\n            </Container>\n        </LayoutDefault>\n    );\n};\n\nexport default RecoveryPage;","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { Input } from \"../../UI/Input\";\nimport { Button } from '../../UI/Button';\nimport { ErrorText } from '../../UI/ErrorText';\nimport { LinkTo } from '../../UI/LinkTo';\nimport { Label } from '../../UI/Label';\nimport styles from './authorization.module.scss';\nimport { Title } from '../../UI/Title';\n\nconst RegisterWidgets = () => {\n    const initialValues = { email: '', password: '' };\n    const validateForm = values => {\n        const errors = {};\n        if (!values.email) {\n            errors.email = 'Укажите почту';\n        } else if (\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n        ) {\n            errors.email = 'Неправильная почта';\n        }\n\n        if (!values.password) {\n            errors.password = \"Введите пароль\";\n        }\n\n        return errors;\n    }\n\n    const onSubmitForm = (values, { setSubmitting }) => {\n        setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(false);\n        }, 400);\n    };\n\n    return (\n        <div className={styles.authorization}>\n            <Title className={styles.authorization__title}>Создание нового аккаунта</Title>\n            <Formik\n                initialValues={initialValues}\n                validate={validateForm}\n                onSubmit={onSubmitForm}\n            >\n                {({ isSubmitting }) => (\n                    <Form className={styles.authorization__form}>\n                        <Label>\n                            <Field type=\"email\" name=\"email\" placeholder=\"Электронная почта\" as={Input} />\n                            <ErrorMessage name=\"email\" component={ErrorText} />\n                        </Label>\n                        <Label>\n                            <Field type=\"password\" name=\"password\" placeholder=\"Ваш пароль\" as={Input} />\n                            <ErrorMessage name=\"password\" component={ErrorText} />\n                        </Label>\n                        <Button className={styles.authorization__button} type=\"submit\" disabled={isSubmitting}>Регистрация</Button>\n                    </Form>\n                )}\n            </Formik>\n            <div className={styles.authorization__links}>\n                <LinkTo to=\"/login\">Войти в уже существующий</LinkTo>\n                <LinkTo to=\"/recovery\" styleColor=\"blue\">Забыли пароль?</LinkTo>\n            </div>\n        </div>\n    );\n};\n\nexport {\n    RegisterWidgets\n};","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport { Input } from \"../../UI/Input\";\nimport { Button } from '../../UI/Button';\nimport { ErrorText } from '../../UI/ErrorText';\nimport { LinkTo } from '../../UI/LinkTo';\nimport { Label } from '../../UI/Label';\nimport styles from './authorization.module.scss';\nimport { Title } from '../../UI/Title';\n\nconst RecoveryWidgets = () => {\n    const initialValues = { email: '', password: '' };\n    const validateForm = values => {\n        const errors = {};\n        if (!values.email) {\n            errors.email = 'Укажите почту';\n        } else if (\n            !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\n        ) {\n            errors.email = 'Неправильная почта';\n        }\n\n        return errors;\n    }\n\n    const onSubmitForm = (values, { setSubmitting }) => {\n        setTimeout(() => {\n            alert(JSON.stringify(values, null, 2));\n            setSubmitting(false);\n        }, 400);\n    };\n\n    return (\n        <div className={styles.authorization}>\n            <Title className={styles.authorization__title}>Восстановления пароля</Title>\n            <Formik\n                initialValues={initialValues}\n                validate={validateForm}\n                onSubmit={onSubmitForm}\n            >\n                {({ isSubmitting }) => (\n                    <Form className={styles.authorization__form}>\n                        <Label>\n                            <Field type=\"email\" name=\"email\" placeholder=\"Электронная почта\" as={Input} />\n                            <ErrorMessage name=\"email\" component={ErrorText} />\n                        </Label>\n                        <Button className={styles.authorization__button} type=\"submit\" disabled={isSubmitting}>Отправить</Button>\n                    </Form>\n                )}\n            </Formik>\n            <div className={styles.authorization__links}>\n                <LinkTo to=\"/login\">Войти в аккаунт</LinkTo>\n            </div>\n        </div>\n    );\n};\n\nexport {\n    RecoveryWidgets\n};"],"names":["_jsx","LayoutDefault","children","_jsxs","Container","Breadcrumbs","items","text","link","active","RecoveryWidgets","RegisterWidgets","className","styles","Title","Formik","initialValues","email","password","validate","values","errors","test","onSubmit","_ref","setSubmitting","setTimeout","alert","JSON","stringify","_ref2","isSubmitting","Form","Label","Field","type","name","placeholder","as","Input","ErrorMessage","component","ErrorText","Button","disabled","LinkTo","to","styleColor"],"sourceRoot":""}